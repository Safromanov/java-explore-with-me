CREATE TABLE locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT                                   NOT NULL,
    lon FLOAT                                   NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) UNIQUE,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255) UNIQUE,
    email VARCHAR(255) UNIQUE,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    initiator_id       BIGINT REFERENCES users (id) ON DELETE CASCADE,
    annotation         VARCHAR(5000),
    category_id        BIGINT REFERENCES category (id),
    description        VARCHAR(10000),
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    location_id        BIGINT REFERENCES locations (id),
    paid               BOOLEAN,
    participant_limit  INTEGER                                 NOT NULL,
    request_moderation BOOLEAN,
    title              VARCHAR(255),
    state              INTEGER,
    CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE event_requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    event_id     BIGINT REFERENCES events (id) ON DELETE CASCADE,
    created      TIMESTAMP WITHOUT TIME ZONE,
    status       INTEGER,
    CONSTRAINT pk_eventrequests PRIMARY KEY (id)
);

CREATE TABLE compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN                                 NOT NULL,
    title  VARCHAR(255) UNIQUE                      NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE compilations_events
(
    compilation_id BIGINT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
    events_id      BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE
);